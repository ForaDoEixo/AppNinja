# Generated by Django 2.1.3 on 2018-11-24 14:00

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Causa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, unique=True)),
                ('sigla_uf', models.CharField(max_length=500, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Habilidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=500, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Interesse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=500, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ninja',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('cidade', models.CharField(max_length=50)),
                ('estado', models.CharField(max_length=10)),
                ('pais', models.CharField(max_length=15)),
                ('telefone', models.CharField(max_length=15)),
                ('dataNascimento', models.CharField(max_length=10)),
                ('genero', models.CharField(max_length=10)),
                ('etnia', models.CharField(max_length=10)),
                ('orientacao', models.CharField(max_length=10)),
                ('identidade', models.CharField(max_length=10)),
                ('twitter', models.CharField(max_length=10)),
                ('facebook', models.CharField(max_length=10)),
                ('instagram', models.CharField(max_length=10)),
                ('telegram', models.CharField(max_length=10)),
                ('causas', models.CharField(max_length=10)),
                ('bio', models.CharField(max_length=10)),
                ('profissao', models.CharField(max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PerfilNinja',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.CharField(max_length=500)),
                ('data_nascimento', models.DateField()),
                ('twitter', models.CharField(max_length=500)),
                ('facebook', models.CharField(max_length=500)),
                ('instagram', models.CharField(max_length=500)),
                ('telegram', models.CharField(max_length=500)),
                ('profissao', models.CharField(max_length=500)),
                ('bio', models.TextField(max_length=500, verbose_name='bio')),
                ('genero', models.IntegerField(choices=[(0, 'Masculino'), (1, 'Feminino'), (2, 'Prefiro não declarar')], null=True)),
                ('orientacao_sexual', models.IntegerField(choices=[(0, 'Heterossexual'), (1, 'Homossexual'), (2, 'Bissexual'), (3, 'Pansexual'), (4, 'Assexual'), (5, 'Fluido'), (6, 'Prefiro não declarar')], null=True)),
                ('identidade_genero', models.IntegerField(choices=[(0, 'Cisgênero'), (1, 'Transgênero'), (2, 'Neutro ou Não-binario'), (3, 'Prefiro não declarar')], null=True)),
                ('etnia', models.IntegerField(choices=[(0, 'Negra'), (1, 'Indígena'), (2, 'Asiática'), (3, 'Caucasiana'), (4, 'Mestiça'), (5, 'Outra')], null=True)),
                ('causas', models.ManyToManyField(to='account.Causa')),
                ('cidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Cidade')),
                ('habilidades', models.ManyToManyField(to='account.Habilidade')),
                ('interesses', models.ManyToManyField(to='account.Interesse')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='estado',
            name='pais',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Pais'),
        ),
        migrations.AddField(
            model_name='cidade',
            name='estado',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Estado'),
        ),
        migrations.AddField(
            model_name='cidade',
            name='pais',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Pais'),
        ),
    ]
